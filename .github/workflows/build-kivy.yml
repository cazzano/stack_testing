name: Build Kivy Android APK from Cross Platform Branch

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build from'
        required: true
        default: 'cross_plateform'
        type: string

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout main branch (for workflow files)
      uses: actions/checkout@v4
      with:
        ref: main
        path: main-branch
    
    - name: Checkout cross_plateform branch (for source code)
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch || 'cross_plateform' }}
        path: source-code
    
    - name: Copy source code to build directory
      run: |
        mkdir -p build-workspace
        cp -r source-code/python/kivy/* build-workspace/
        ls -la build-workspace/
        echo "Contents of build workspace:"
        find build-workspace -type f -name "*.py" -o -name "*.spec"
    
    - name: Verify required files exist
      run: |
        if [ ! -f "build-workspace/main.py" ]; then
          echo "Error: main.py not found in build-workspace/"
          echo "Available files:"
          ls -la build-workspace/
          exit 1
        fi
        
        if [ ! -f "build-workspace/buildozer.spec" ]; then
          echo "Warning: buildozer.spec not found, will create a default one"
          cat > build-workspace/buildozer.spec << 'EOF'
        [app]
        title = My Simple Kivy App
        package.name = simplekivyapp
        package.domain = org.example
        source.dir = .
        source.include_exts = py,png,jpg,kv,atlas
        version = 0.1
        requirements = python3==3.11.0,kivy==2.1.0,pillow
        orientation = portrait
        fullscreen = 0
        
        [buildozer]
        log_level = 2
        warn_on_root = 1
        
        [android]
        android.permissions = INTERNET
        android.api = 31
        android.minapi = 21
        android.ndk = 25b
        android.sdk = 31
        android.ndk_api = 21
        android.archs = arm64-v8a, armeabi-v7a
        android.accept_sdk_license = True
        android.skip_update = False
        android.allow_backup = True
        EOF
        fi
        
        echo "Final buildozer.spec:"
        cat build-workspace/buildozer.spec
    
    - name: Build APK with Buildozer Docker
      uses: docker://kivy/buildozer:latest
      with:
        entrypoint: /bin/bash
        args: >-
          -c "
          cd /github/workspace/build-workspace &&
          echo 'Working directory contents:' &&
          ls -la &&
          echo 'Building APK...' &&
          buildozer android debug &&
          echo 'Build completed! Contents of bin directory:' &&
          ls -la bin/ || echo 'No bin directory found'
          "
    
    - name: List all generated files
      if: always()
      run: |
        echo "=== Build workspace contents after build ==="
        find build-workspace -name "*.apk" -o -name "bin" -type d || echo "No APK or bin directory found"
        
        echo "=== Looking for APK files ==="
        find . -name "*.apk" -type f || echo "No APK files found anywhere"
        
        echo "=== Full directory structure ==="
        ls -la build-workspace/
        
        if [ -d "build-workspace/bin" ]; then
          echo "=== Contents of bin directory ==="
          ls -la build-workspace/bin/
        fi
    
    - name: Copy APK to accessible location
      run: |
        mkdir -p artifacts
        if [ -d "build-workspace/bin" ]; then
          cp build-workspace/bin/*.apk artifacts/ 2>/dev/null || echo "No APK files to copy from bin/"
        fi
        
        # Search for APK files anywhere in build-workspace
        find build-workspace -name "*.apk" -exec cp {} artifacts/ \; 2>/dev/null || echo "No APK files found"
        
        # If still no APK, create a status file
        if [ -z "$(ls -A artifacts/)" ]; then
          echo "Build may have failed or APK not generated" > artifacts/build-status.txt
          echo "Check the build logs above for errors" >> artifacts/build-status.txt
        fi
        
        echo "=== Final artifacts directory ==="
        ls -la artifacts/
    
    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: kivy-android-apk-${{ github.run_number }}
        path: artifacts/
        retention-days: 30
        if-no-files-found: warn
    
    - name: Build Summary
      if: always()
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch Built:** ${{ github.event.inputs.branch || 'cross_plateform' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Source Path:** /python/kivy/" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Status:** $([ -f artifacts/*.apk ] && echo "✅ Success" || echo "❌ Failed")" >> $GITHUB_STEP_SUMMARY
        
        if [ -f artifacts/*.apk ]; then
          echo "- **APK Generated:** ✅" >> $GITHUB_STEP_SUMMARY
          echo "- **Download:** Check the Artifacts section below" >> $GITHUB_STEP_SUMMARY
        else
          echo "- **APK Generated:** ❌" >> $GITHUB_STEP_SUMMARY
          echo "- **Note:** Check build logs for errors" >> $GITHUB_STEP_SUMMARY
        fi
